{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MY\\\\Documents\\\\MyPortfolio\\\\react-projects\\\\movie_app_2021\\\\src\\\\App.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true\n    };\n\n    this.getMovies = async () => {\n      const movies = await axios.get(\"https://yts-proxy.nomadcoders1.now.sh/list_movies.json\");\n      console.log(movies.data.movies);\n    };\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const {\n      isLoading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isLoading ? \"Loading...\" : \"We are ready\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/MY/Documents/MyPortfolio/react-projects/movie_app_2021/src/App.js"],"names":["React","axios","App","Component","state","isLoading","getMovies","movies","get","console","log","data","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,SAAS,EAAE;AADL,KADwB;;AAAA,SAKhCC,SALgC,GAKpB,YAAY;AACtB,YAAMC,MAAM,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAU,wDAAV,CAArB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,IAAP,CAAYJ,MAAxB;AACD,KAR+B;AAAA;;AAUhCK,EAAAA,iBAAiB,GAAG;AAClB,SAAKN,SAAL;AACD;;AAEDO,EAAAA,MAAM,GAAG;AACP,UAAM;AAAER,MAAAA;AAAF,QAAgB,KAAKD,KAA3B;AACA,wBACE;AAAA,gBACGC,SAAS,GAAG,YAAH,GAAkB;AAD9B;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AArB+B;;AAwBlC,eAAeH,GAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nclass App extends React.Component {\n  state = {\n    isLoading: true\n  };\n\n  getMovies = async () => {\n    const movies = await axios.get(\"https://yts-proxy.nomadcoders1.now.sh/list_movies.json\");\n    console.log(movies.data.movies);\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const { isLoading } = this.state;\n    return (\n      <div>\n        {isLoading ? \"Loading...\" : \"We are ready\"}\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}